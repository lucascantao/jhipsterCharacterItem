package lucascantao.charitem.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CharacterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacterAllPropertiesEquals(Character expected, Character actual) {
        assertCharacterAutoGeneratedPropertiesEquals(expected, actual);
        assertCharacterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacterAllUpdatablePropertiesEquals(Character expected, Character actual) {
        assertCharacterUpdatableFieldsEquals(expected, actual);
        assertCharacterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacterAutoGeneratedPropertiesEquals(Character expected, Character actual) {
        assertThat(expected)
            .as("Verify Character auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacterUpdatableFieldsEquals(Character expected, Character actual) {
        assertThat(expected)
            .as("Verify Character relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacterUpdatableRelationshipsEquals(Character expected, Character actual) {
        assertThat(expected)
            .as("Verify Character relationships")
            .satisfies(e -> assertThat(e.getItem()).as("check item").isEqualTo(actual.getItem()));
    }
}
